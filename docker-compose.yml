version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    env_file:
      - sandy.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      AMQP_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/"
      REDIS_URL: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: celery
    env_file:
      - sandy.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      AMQP_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/"
      REDIS_URL: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: Dockerfile
      target: flower
    env_file:
      - sandy.env
    environment:
      AMQP_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/"
      REDIS_URL: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      FLOWER_PORT: "5555"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5555:5555"
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    env_file:
      - sandy.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - sandy.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    env_file:
      - sandy.env
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING" ]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  pg_data:
